一个整数如果按从低位到高位的顺序，奇数位（个位、百位、万位 · · · ）
上的数字是奇数，偶数位（十位、千位、十万位 · · · ）上的数字是偶数，我们就称之为“好数”。
给定一个正整数 N，请计算从 1 到 N 一共有多少个好数。
输入格式
一个整数 N。
输出格式
一个整数代表答案。
#include<iostream>
using namespace std;
bool isGood(int i)
{
    int a ;
    int length = 0;
        while(i)
        {
            a = i % 10;
            i /= 10;
            length ++;
            if(!(length % 2 == 0 && a % 2 == 0) && !(length % 2 == 1 && a % 2 == 1))
            {
                return false;
            }
        }
        return true;
}
int main()
{
    int N;
    scanf("%d", &N);
    int count = 0;
    for(int i = 1; i <= N; i ++)
    {
        if(isGood(i)) count ++;
    }
    cout << count << endl;
    return 0;
}
