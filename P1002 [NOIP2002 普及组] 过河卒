棋盘上 A 点有一个过河卒，需要走到目标 B 点。卒行走的规则：可以向下、或者向右。同时在棋盘上 
C 点有一个对方的马，该马所在的点和所有跳跃一步可达的点称为对方马的控制点。因此称之为“马拦过河卒”。
棋盘用坐标表示，A点 (0,0)、B 点 (n,m)，同样马的位置坐标是需要给出的。
现在要求你计算出卒从 A 点能够到达 B 点的路径的条数，假设马的位置是固定不动的，并不是卒走一步马走一步。
输入格式
一行四个正整数，分别表示 
B 点坐标和马的坐标。
输出格式
一个整数，表示所有的路径条数。

#include <iostream>
using namespace std;
long long m[23][23];
long long f[23][23];
void ban(long long x, long long y)
{   
    m[x][y] = 1;
    m[x - 1][y - 2] = 1;
    m[x - 1][y + 2] = 1;
    m[x + 1][y + 2] = 1;
    m[x + 1][y - 2] = 1;
    m[x - 2][y - 1] = 1;
    m[x - 2][y + 1] = 1;
    m[x + 2][y + 1] = 1;
    m[x + 2][y - 1] = 1;
   
}
int main()
{
    long long bx, by, mx, my;
    scanf("%lld%lld%lld%lld", &bx, &by, &mx, &my);
    bx ++;
    by ++;
    mx ++;
    my ++;//从(1,1)开始
    f[1][1] = 1;
    ban(mx, my);
    for(int i = 1; i <= bx; i ++)
    {
        for(int j = 1; j <= by; j ++)
        {
            if(i == 1 && j == 1)continue;
            if(m[i][j] == 0)
            f[i][j] = f[i - 1][j] + f[i][j - 1]; 
        }
    }
    printf("%lld",f[bx][by]);
    return 0;
}
